load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

events {
    worker_connections 1024;  # Adjust the number as needed
}

http {
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    lua_shared_dict script_cache 10m;
    lua_shared_dict oas_cache 50m;
    lua_shared_dict script_mapping 1m;
    lua_package_path "/etc/nginx/lua-scripts/db_scripts/?.lua;/etc/nginx/lua-scripts/generated/?.lua;/etc/nginx/lua-scripts/function_scripts/?.lua;/etc/nginx/lua-scripts/script_service/?.lua;/usr/local/openresty/lualib/?.lua;;";

    ndk_set_var_set $formatted_time 'time_local | strftime:%Y/%m/%d %H:%M:%S';

    log_format timing_log '[$formatted_time] | Request: "$request" | '
                         'Status: $status | Size: $body_bytes_sent | '
                         'Request Time: $request_time | Response Time: $upstream_response_time $pipe';



    access_log /workspace/.logs/nginx-timing.log timing_log;
    error_log /workspace/.logs/nginx-error.log warn;

    upstream fe_catalog {
        server local.sera:${FE_CATALOG_PORT};
    }

    upstream be_builder {
        server local.sera:${BE_BUILDER_PORT};
    }

    upstream be_sequencer {
        server local.sera:${BE_SEQUENCER_PORT};
    }

    upstream be_socket {
        server local.sera:${BE_SOCKET_PORT};
    }

    upstream be_processor {
        server local.sera:${BE_PROCESSOR_PORT};
    }

    # Map the x_sera_service header to determine the target service
    map ___http_x_sera_service ___route {
        default "be_sequencer";  # Default to sequencer for any other traffic
        be_builder "be_builder";
        be_nginx "be_nginx";
    }

    # Map the port to a specific service
    map ___server_port ___target {
        default "be_sequencer";
        "${BE_ROUTER_PORT}" "https://fe_catalog";
    }

    
    include /etc/nginx/conf.d/sera-backend.conf;
    include /etc/nginx/conf.d/sera-main.conf;
    include /etc/nginx/conf.d/sera-manage.conf;
}
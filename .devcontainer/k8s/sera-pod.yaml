apiVersion: v1
kind: Pod
metadata:
  name: sera-pod
  labels:
    app: sera-app
spec:
  volumes:
    - name: node-modules
      persistentVolumeClaim:
        claimName: sera-node-modules-pvc
    - name: sera-models
      persistentVolumeClaim:
        claimName: sera-models-pvc
    - name: mongo-init-scripts
      configMap:
        name: sera-mongo-init-scripts
        items:
          - key: entrypoint.sh
            path: entrypoint.sh
    - name: mongodb-data
      persistentVolumeClaim:
        claimName: mongodb-pvc
  initContainers:
    - name: init-containers
      image: curlimages/curl:latest
      securityContext:
        runAsUser: 0
      command: ["sh", "-c", "curl -L -o /node_modules.tar.gz https://github.com/Sera-ai/sera-public-test/releases/download/sera/node_modules.tar.gz && tar -xzvf /node_modules.tar.gz -C /mnt/node_modules && curl -L -o /sera_models.tar.gz https://github.com/Sera-ai/sera-public-test/releases/download/sera/sera-models.tar.gz && tar -xzvf /sera_models.tar.gz -C /mnt/sera_models"]
      volumeMounts:
        - name: node-modules
          mountPath: /mnt/node_modules
        - name: sera-models
          mountPath: /mnt/sera_models
    - name: init-mongodb
      image: mongo:latest
      securityContext:
        runAsUser: 0
      command: ["/bin/bash", "/docker-entrypoint-initdb.d/entrypoint.sh"]
      volumeMounts:
        - name: mongo-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        - name: mongodb-data
          mountPath: /data/db
  containers:
  - name: sera-frontend-catalog
    image: frontend_catalog:latest
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["npm start"]
    ports:
    - containerPort: 5173
  - name: sera-backend-builder
    image: backend_builder:latest
    volumeMounts:
      - mountPath: /workspace/node_modules
        name: node-modules
      - mountPath: /workspace/src/models
        name: sera-models
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["npm start"]
    ports:
    - containerPort: 12030
    envFrom:
      - configMapRef:
          name: sera-env-vars
  - name: sera-backend-socket
    image: backend_socket:latest
    volumeMounts:
      - mountPath: /workspace/node_modules
        name: node-modules
      - mountPath: /workspace/src/models
        name: sera-models
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["npm start"]
    ports:
    - containerPort: 12040
    envFrom:
      - configMapRef:
          name: sera-env-vars
  - name: sera-backend-sequencer
    image: backend_sequencer:latest
    volumeMounts:
      - mountPath: /workspace/node_modules
        name: node-modules
      - mountPath: /workspace/src/models
        name: sera-models
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["npm start"]
    ports:
    - containerPort: 12050
    envFrom:
      - configMapRef:
          name: sera-env-vars
  - name: sera-backend-processor
    image: backend_processor:latest
    volumeMounts:
      - mountPath: /workspace/node_modules
        name: node-modules
      - mountPath: /workspace/src/models
        name: sera-models
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["npm start"]
    ports:
    - containerPort: 12060
    envFrom:
      - configMapRef:
          name: sera-env-vars
  - name: sera-mongodb
    image: mongo:latest
    ports:
      - containerPort: 27017
    volumeMounts:
      - name: mongodb-data
        mountPath: /data/db
    command: ["mongod"]
    args: ["--replSet", "rs0", "--bind_ip_all"]